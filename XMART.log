 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
nohup: ignoring input
ConstructMohidWaterMPI - MohidWater - ERR70
ConstructMohidWaterMPI - MohidWater - ERR70
ConstructMohidWaterMPI - MohidWater - ERR70
ConstructMohidWaterMPI - MohidWater - ERR70
ConstructMohidWaterMPI - MohidWater - ERR70
ConstructMohidWaterMPI - MohidWater - ERR70
ConstructMohidWaterMPI - MohidWater - ERR70
ConstructMohidWaterMPI - MohidWater - ERR70
ConstructMohidWaterMPI - MohidWater - ERR70
ConstructMohidWaterMPI - MohidWater - ERR70
ConstructMohidWaterMPI - MohidWater - ERR70
ConstructMohidWaterMPI - MohidWater - ERR70
ConstructMohidWaterMPI - MohidWater - ERR70
ConstructMohidWaterMPI - MohidWater - ERR70
ConstructMohidWaterMPI - MohidWater - ERR70
nohup: ignoring input
Get meteo from: /ciram/saida/cptec/wrf7km///20230227_20230228//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230227
Message from XMART: model Babitonga
Program Mohid Water was not successfully terminated for 20230227
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        done.
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
Read_Old_Properties_2D - ModuleInterfaceSedimentWater - ERR10
HDF5-DIAG: Error detected in HDF5 (1.8.17) thread 0:
  #000: H5G.c line 467 in H5Gopen2(): unable to open group
    major: Symbol table
    minor: Can't open object
  #001: H5Gint.c line 320 in H5G__open_name(): group not found
    major: Symbol table
    minor: Object not found
  #002: H5Gloc.c line 430 in H5G_loc_find(): can't find object
    major: Symbol table
    minor: Object not found
  #003: H5Gtraverse.c line 861 in H5G_traverse(): internal path traversal failed
    major: Symbol table
    minor: Object not found
  #004: H5Gtraverse.c line 641 in H5G_traverse_real(): traversal operator failed
    major: Symbol table
    minor: Callback failed
  #005: H5Gloc.c line 385 in H5G_loc_find_cb(): object 'Corners3D' doesn't exist
    major: Symbol table
    minor: Object not found
GetHDF5GroupID - ModuleHDF5 - ERR10
Get meteo from: /ciram/saida/cptec/wrf7km///20230228_20230301//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230228
Message from XMART: model Babitonga
Program Mohid Water was not successfully terminated for 20230228
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        done.
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
Get meteo from: /ciram/saida/cptec/wrf7km///20230228_20230301//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230228
Get meteo from: /ciram/saida/cptec/wrf7km///20230301_20230302//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230301
Get meteo from: /ciram/saida/cptec/wrf7km///20230302_20230303//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230302
Get meteo from: /ciram/saida/cptec/wrf7km///20230303_20230304//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230303
Get meteo from: /ciram/saida/cptec/wrf7km///20230304_20230305//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230304
Get meteo from: /ciram/saida/cptec/wrf7km///20230305_20230306//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230305
Get meteo from: /ciram/saida/cptec/wrf7km///20230306_20230307//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230306
Get meteo from: /ciram/saida/cptec/wrf7km///20230307_20230308//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230307
Get meteo from: /ciram/saida/cptec/wrf7km///20230308_20230309//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230308
Get meteo from: /ciram/saida/cptec/wrf7km///20230309_20230310//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230309
Get meteo from: /ciram/saida/cptec/wrf7km///20230310_20230311//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230310
Get meteo from: /ciram/saida/cptec/wrf7km///20230311_20230312//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230311
Get meteo from: /ciram/saida/cptec/wrf7km///20230312_20230313//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230312
Get meteo from: /ciram/saida/cptec/wrf7km///20230313_20230314//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230313
Get meteo from: /ciram/saida/cptec/wrf7km///20230314_20230315//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230314
Get meteo from: /ciram/saida/cptec/wrf7km///20230315_20230316//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230315
Get meteo from: /ciram/saida/cptec/wrf7km///20230316_20230317//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230316
Get meteo from: /ciram/saida/cptec/wrf7km///20230317_20230318//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230317
Get meteo from: /ciram/saida/cptec/wrf7km///20230318_20230319//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230318
Get meteo from: /ciram/saida/cptec/wrf7km///20230319_20230320//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230319
Get meteo from: /ciram/saida/cptec/wrf7km///20230320_20230321//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230320
Get meteo from: /ciram/saida/cptec/wrf7km///20230321_20230322//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230321
Get meteo from: /ciram/saida/cptec/wrf7km///20230322_20230323//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230322
Get meteo from: /ciram/saida/cptec/wrf7km///20230323_20230324//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230323
Get meteo from: /ciram/saida/cptec/wrf7km///20230324_20230325//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230324
Get meteo from: /ciram/saida/cptec/wrf7km///20230325_20230326//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230325
Get meteo from: /ciram/saida/cptec/wrf7km///20230326_20230327//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230326
Get meteo from: /ciram/saida/cptec/wrf7km///20230327_20230328//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230327
Get meteo from: /ciram/saida/cptec/wrf7km///20230328_20230329//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230328
Get meteo from: /ciram/saida/cptec/wrf7km///20230329_20230330//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230329
Get meteo from: /ciram/saida/cptec/wrf7km///20230330_20230331//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230330
Get meteo from: /ciram/saida/cptec/wrf7km///20230331_20230401//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230331
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
nohup: ignoring input
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
forrtl: error (69): process interrupted (SIGINT)
Image              PC                Routine            Line        Source             
libc.so.6          00007F1EB50A2520  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000B24F4B  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E62ED0  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E4E784  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC800  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC4FF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DB15B3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA91BB  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA79DF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040AF82  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408FE9  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408C3D  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408400  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000405464  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000065EED3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000069A7E8  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049C7E3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049BE76  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000087202B  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FD04D7  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FCA6D6  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040516D  Unknown               Unknown  Unknown
libc.so.6          00007F1EB5089D90  Unknown               Unknown  Unknown
libc.so.6          00007F1EB5089E40  __libc_start_main     Unknown  Unknown
MohidWater_mpi.ex  0000000000405085  Unknown               Unknown  Unknown
forrtl: error (69): process interrupted (SIGINT)
Image              PC                Routine            Line        Source             
libc.so.6          00007FC34CE30520  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000B24F01  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E62ED0  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E4E784  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC800  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC4FF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DB15B3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA91BB  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA79DF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040AF82  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408FE9  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408C3D  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408400  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000405464  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000065EED3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000069A7E8  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049C7E3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049BE76  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000087202B  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FD04D7  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FCA6D6  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040516D  Unknown               Unknown  Unknown
libc.so.6          00007FC34CE17D90  Unknown               Unknown  Unknown
libc.so.6          00007FC34CE17E40  __libc_start_main     Unknown  Unknown
MohidWater_mpi.ex  0000000000405085  Unknown               Unknown  Unknown
forrtl: error (69): process interrupted (SIGINT)
Image              PC                Routine            Line        Source             
libc.so.6          00007FEEF6CA2520  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000B24EBC  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E62ED0  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E4E784  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC800  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC4FF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DB15B3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA91BB  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA79DF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040AF82  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408FE9  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408C3D  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408400  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000405464  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000065EED3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000069A7E8  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049C7E3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049BE76  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000087202B  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FD04D7  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FCA6D6  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040516D  Unknown               Unknown  Unknown
libc.so.6          00007FEEF6C89D90  Unknown               Unknown  Unknown
libc.so.6          00007FEEF6C89E40  __libc_start_main     Unknown  Unknown
MohidWater_mpi.ex  0000000000405085  Unknown               Unknown  Unknown
forrtl: error (69): process interrupted (SIGINT)
Image              PC                Routine            Line        Source             
libc.so.6          00007F9120F49520  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000B24EAE  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E62ED0  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E4E784  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC800  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC4FF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DB15B3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA91BB  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA79DF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040AF82  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408FE9  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408C3D  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408400  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000405464  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000065EED3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000069A7E8  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049C7E3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049BE76  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000087202B  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FD04D7  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FCA6D6  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040516D  Unknown               Unknown  Unknown
libc.so.6          00007F9120F30D90  Unknown               Unknown  Unknown
libc.so.6          00007F9120F30E40  __libc_start_main     Unknown  Unknown
MohidWater_mpi.ex  0000000000405085  Unknown               Unknown  Unknown
forrtl: error (69): process interrupted (SIGINT)
Image              PC                Routine            Line        Source             
libc.so.6          00007F08BA549520  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000B24F0D  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E62ED0  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E4E784  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC800  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC4FF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DB15B3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA91BB  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA79DF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040AF82  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408FE9  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408C3D  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408400  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000405464  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000065EED3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000069A7E8  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049C7E3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049BE76  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000087202B  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FD04D7  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FCA6D6  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040516D  Unknown               Unknown  Unknown
libc.so.6          00007F08BA530D90  Unknown               Unknown  Unknown
libc.so.6          00007F08BA530E40  __libc_start_main     Unknown  Unknown
MohidWater_mpi.ex  0000000000405085  Unknown               Unknown  Unknown
forrtl: error (69): process interrupted (SIGINT)
Image              PC                Routine            Line        Source             
libc.so.6          00007F259ECA2520  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000B24EDD  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E62ED0  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E4E784  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC800  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC4FF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DB15B3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA91BB  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA79DF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040AF82  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408FE9  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408C3D  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408400  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000405464  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000065EED3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000069A7E8  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049C7E3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049BE76  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000087202B  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FD04D7  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FCA6D6  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040516D  Unknown               Unknown  Unknown
libc.so.6          00007F259EC89D90  Unknown               Unknown  Unknown
libc.so.6          00007F259EC89E40  __libc_start_main     Unknown  Unknown
MohidWater_mpi.ex  0000000000405085  Unknown               Unknown  Unknown
forrtl: error (69): process interrupted (SIGINT)
Image              PC                Routine            Line        Source             
libc.so.6          00007FE408B49520  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000B24ED8  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E62ED0  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E4E784  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC800  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC4FF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DB15B3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA91BB  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA79DF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040AF82  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408FE9  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408C3D  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408400  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000405464  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000065EED3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000069A7E8  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049C7E3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049BE76  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000087202B  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FD04D7  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FCA6D6  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040516D  Unknown               Unknown  Unknown
libc.so.6          00007FE408B30D90  Unknown               Unknown  Unknown
libc.so.6          00007FE408B30E40  __libc_start_main     Unknown  Unknown
MohidWater_mpi.ex  0000000000405085  Unknown               Unknown  Unknown
forrtl: error (69): process interrupted (SIGINT)
Image              PC                Routine            Line        Source             
libc.so.6          00007F6154349520  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000B24EDD  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E62ED0  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E4E784  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC800  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC4FF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DB15B3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA91BB  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA79DF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040AF82  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408FE9  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408C3D  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408400  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000405464  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000065EED3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000069A7E8  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049C7E3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049BE76  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000087202B  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FD04D7  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FCA6D6  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040516D  Unknown               Unknown  Unknown
libc.so.6          00007F6154330D90  Unknown               Unknown  Unknown
libc.so.6          00007F6154330E40  __libc_start_main     Unknown  Unknown
MohidWater_mpi.ex  0000000000405085  Unknown               Unknown  Unknown
forrtl: error (69): process interrupted (SIGINT)
Image              PC                Routine            Line        Source             
libc.so.6          00007F1F81630520  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000B24EAE  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E62ED0  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E4E784  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC800  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC4FF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DB15B3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA91BB  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA79DF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040AF82  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408FE9  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408C3D  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408400  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000405464  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000065EED3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000069A7E8  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049C7E3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049BE76  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000087202B  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FD04D7  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FCA6D6  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040516D  Unknown               Unknown  Unknown
libc.so.6          00007F1F81617D90  Unknown               Unknown  Unknown
libc.so.6          00007F1F81617E40  __libc_start_main     Unknown  Unknown
MohidWater_mpi.ex  0000000000405085  Unknown               Unknown  Unknown
forrtl: error (69): process interrupted (SIGINT)
Image              PC                Routine            Line        Source             
libc.so.6          00007F4A864A2520  Unknown               Unknown  Unknown
libifcoremt.so.5   00007F4A87D38E6E  for_adjustl           Unknown  Unknown
MohidWater_mpi.ex  0000000000B24E82  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E62ED0  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E4E784  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC800  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC4FF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DB15B3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA91BB  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA79DF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040AF82  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408FE9  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408C3D  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408400  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000405464  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000065EED3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000069A7E8  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049C7E3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049BE76  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000087202B  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FD04D7  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FCA6D6  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040516D  Unknown               Unknown  Unknown
libc.so.6          00007F4A86489D90  Unknown               Unknown  Unknown
libc.so.6          00007F4A86489E40  __libc_start_main     Unknown  Unknown
MohidWater_mpi.ex  0000000000405085  Unknown               Unknown  Unknown
forrtl: error (69): process interrupted (SIGINT)
Image              PC                Routine            Line        Source             
libc.so.6          00007F1CFC2A2520  Unknown               Unknown  Unknown
libifcoremt.so.5   00007F1CFDAEE8AA  for__acquire_lun      Unknown  Unknown
libifcoremt.so.5   00007F1CFDB0823D  for_read_seq_fmt      Unknown  Unknown
MohidWater_mpi.ex  0000000000B24E6E  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E62ED0  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E4E784  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC800  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC4FF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DB15B3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA91BB  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA79DF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040AF82  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408FE9  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408C3D  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408400  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000405464  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000065EED3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000069A7E8  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049C7E3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049BE76  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000087202B  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FD04D7  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FCA6D6  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040516D  Unknown               Unknown  Unknown
libc.so.6          00007F1CFC289D90  Unknown               Unknown  Unknown
libc.so.6          00007F1CFC289E40  __libc_start_main     Unknown  Unknown
MohidWater_mpi.ex  0000000000405085  Unknown               Unknown  Unknown
forrtl: error (69): process interrupted (SIGINT)
Image              PC                Routine            Line        Source             
libc.so.6          00007F15A9949520  Unknown               Unknown  Unknown
libifcoremt.so.5   00007F15AB205E82  for__interp_fmt       Unknown  Unknown
libifcoremt.so.5   00007F15AB2231EA  for_read_seq_fmt_     Unknown  Unknown
libifcoremt.so.5   00007F15AB222AE9  for_read_seq_fmt      Unknown  Unknown
MohidWater_mpi.ex  0000000000B24E6E  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E62ED0  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E4E784  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC800  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC4FF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DB15B3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA91BB  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA79DF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040AF82  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408FE9  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408C3D  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408400  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000405464  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000065EED3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000069A7E8  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049C7E3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049BE76  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000087202B  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FD04D7  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FCA6D6  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040516D  Unknown               Unknown  Unknown
libc.so.6          00007F15A9930D90  Unknown               Unknown  Unknown
libc.so.6          00007F15A9930E40  __libc_start_main     Unknown  Unknown
MohidWater_mpi.ex  0000000000405085  Unknown               Unknown  Unknown
forrtl: error (69): process interrupted (SIGINT)
Image              PC                Routine            Line        Source             
libc.so.6          00007FF2F6749520  Unknown               Unknown  Unknown
libifcoremt.so.5   00007FF2F7FF939F  for__cvt_value        Unknown  Unknown
libifcoremt.so.5   00007FF2F8023DA5  for_read_seq_fmt_     Unknown  Unknown
libifcoremt.so.5   00007FF2F8022AE9  for_read_seq_fmt      Unknown  Unknown
MohidWater_mpi.ex  0000000000B24E6E  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E62ED0  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E4E784  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC800  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC4FF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DB15B3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA91BB  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA79DF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040AF82  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408FE9  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408C3D  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408400  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000405464  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000065EED3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000069A7E8  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049C7E3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049BE76  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000087202B  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FD04D7  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FCA6D6  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040516D  Unknown               Unknown  Unknown
libc.so.6          00007FF2F6730D90  Unknown               Unknown  Unknown
libc.so.6          00007FF2F6730E40  __libc_start_main     Unknown  Unknown
MohidWater_mpi.ex  0000000000405085  Unknown               Unknown  Unknown
forrtl: error (69): process interrupted (SIGINT)
Image              PC                Routine            Line        Source             
libc.so.6          00007FCF6A0A2520  Unknown               Unknown  Unknown
libifcoremt.so.5   00007FCF6B8FD62A  for__resource_rel     Unknown  Unknown
libifcoremt.so.5   00007FCF6B8EF06E  for__acquire_lun      Unknown  Unknown
libifcoremt.so.5   00007FCF6B90823D  for_read_seq_fmt      Unknown  Unknown
MohidWater_mpi.ex  0000000000B24E6E  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E62ED0  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E4E784  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC800  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC4FF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DB15B3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA91BB  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA79DF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040AF82  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408FE9  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408C3D  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408400  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000405464  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000065EED3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000069A7E8  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049C7E3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049BE76  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000087202B  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FD04D7  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FCA6D6  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040516D  Unknown               Unknown  Unknown
libc.so.6          00007FCF6A089D90  Unknown               Unknown  Unknown
libc.so.6          00007FCF6A089E40  __libc_start_main     Unknown  Unknown
MohidWater_mpi.ex  0000000000405085  Unknown               Unknown  Unknown
forrtl: error (69): process interrupted (SIGINT)
Image              PC                Routine            Line        Source             
libc.so.6          00007FE04F0A2520  Unknown               Unknown  Unknown
libifcoremt.so.5   00007FE0508FD68E  for__resource_rel     Unknown  Unknown
libifcoremt.so.5   00007FE0508EF06E  for__acquire_lun      Unknown  Unknown
libifcoremt.so.5   00007FE05090823D  for_read_seq_fmt      Unknown  Unknown
MohidWater_mpi.ex  0000000000B24E6E  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E62ED0  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000E4E784  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC800  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DBC4FF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DB15B3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA91BB  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000DA79DF  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040AF82  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408FE9  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408C3D  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000408400  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000405464  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000065EED3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000069A7E8  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049C7E3  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000049BE76  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000087202B  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FD04D7  Unknown               Unknown  Unknown
MohidWater_mpi.ex  0000000000FCA6D6  Unknown               Unknown  Unknown
MohidWater_mpi.ex  000000000040516D  Unknown               Unknown  Unknown
libc.so.6          00007FE04F089D90  Unknown               Unknown  Unknown
libc.so.6          00007FE04F089E40  __libc_start_main     Unknown  Unknown
MohidWater_mpi.ex  0000000000405085  Unknown               Unknown  Unknown
Get meteo from: /ciram/saida/cptec/wrf7km///20230227_20230228//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230227
Traceback (most recent call last):
  File "/home/mohid/Aplica/Babitonga/XMART.py", line 259, in <module>
    output = subprocess.call([exe_dir+"/run.sh"])
  File "/home/mohid/miniconda3/lib/python3.9/subprocess.py", line 351, in call
    return p.wait(timeout=timeout)
  File "/home/mohid/miniconda3/lib/python3.9/subprocess.py", line 1189, in wait
    return self._wait(timeout=timeout)
  File "/home/mohid/miniconda3/lib/python3.9/subprocess.py", line 1917, in _wait
    (pid, sts) = self._try_wait(0)
  File "/home/mohid/miniconda3/lib/python3.9/subprocess.py", line 1875, in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
KeyboardInterrupt
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        done.
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        done.
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        done.
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        done.
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
Get meteo from: /ciram/saida/cptec/wrf7km///20230228_20230301//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230228
Get meteo from: /ciram/saida/cptec/wrf7km///20230301_20230302//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230301
Get meteo from: /ciram/saida/cptec/wrf7km///20230302_20230303//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230302
Get meteo from: /ciram/saida/cptec/wrf7km///20230303_20230304//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230303
Get meteo from: /ciram/saida/cptec/wrf7km///20230304_20230305//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230304
Get meteo from: /ciram/saida/cptec/wrf7km///20230305_20230306//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230305
Get meteo from: /ciram/saida/cptec/wrf7km///20230306_20230307//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230306
Get meteo from: /ciram/saida/cptec/wrf7km///20230307_20230308//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230307
Get meteo from: /ciram/saida/cptec/wrf7km///20230308_20230309//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230308
Get meteo from: /ciram/saida/cptec/wrf7km///20230309_20230310//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230309
Get meteo from: /ciram/saida/cptec/wrf7km///20230310_20230311//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230310
Get meteo from: /ciram/saida/cptec/wrf7km///20230311_20230312//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230311
Get meteo from: /ciram/saida/cptec/wrf7km///20230312_20230313//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230312
Get meteo from: /ciram/saida/cptec/wrf7km///20230313_20230314//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230313
Get meteo from: /ciram/saida/cptec/wrf7km///20230314_20230315//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230314
Get meteo from: /ciram/saida/cptec/wrf7km///20230315_20230316//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230315
Get meteo from: /ciram/saida/cptec/wrf7km///20230316_20230317//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230316
Get meteo from: /ciram/saida/cptec/wrf7km///20230317_20230318//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230317
Get meteo from: /ciram/saida/cptec/wrf7km///20230318_20230319//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230318
Get meteo from: /ciram/saida/cptec/wrf7km///20230319_20230320//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230319
Get meteo from: /ciram/saida/cptec/wrf7km///20230320_20230321//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230320
Get meteo from: /ciram/saida/cptec/wrf7km///20230321_20230322//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230321
Get meteo from: /ciram/saida/cptec/wrf7km///20230322_20230323//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230322
Get meteo from: /ciram/saida/cptec/wrf7km///20230323_20230324//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230323
Get meteo from: /ciram/saida/cptec/wrf7km///20230324_20230325//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230324
Get meteo from: /ciram/saida/cptec/wrf7km///20230325_20230326//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230325
Get meteo from: /ciram/saida/cptec/wrf7km///20230326_20230327//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230326
Get meteo from: /ciram/saida/cptec/wrf7km///20230327_20230328//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230327
Get meteo from: /ciram/saida/cptec/wrf7km///20230328_20230329//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230328
Get meteo from: /ciram/saida/cptec/wrf7km///20230329_20230330//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230329
Get meteo from: /ciram/saida/cptec/wrf7km///20230330_20230331//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230330
Get meteo from: /ciram/saida/cptec/wrf7km///20230331_20230401//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230331
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
nohup: ignoring input
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
Read_Final_Turbulence_File - ModuleTurbGOTM - ERR10
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
Read_Final_Turbulence_File - ModuleTurbGOTM - ERR10
Read_Final_Turbulence_File - ModuleTurbGOTM - ERR10
Read_Final_Turbulence_File - ModuleTurbGOTM - ERR10
Read_Final_Turbulence_File - ModuleTurbGOTM - ERR10
Read_Final_Turbulence_File - ModuleTurbGOTM - ERR10
Read_Final_Turbulence_File - ModuleTurbGOTM - ERR10
Read_Final_Turbulence_File - ModuleTurbGOTM - ERR10
Read_Final_Turbulence_File - ModuleTurbGOTM - ERR10
Read_Final_Turbulence_File - ModuleTurbGOTM - ERR10
Read_Final_Turbulence_File - ModuleTurbGOTM - ERR10
Read_Final_Turbulence_File - ModuleTurbGOTM - ERR10
Read_Final_Turbulence_File - ModuleTurbGOTM - ERR10
Read_Final_Turbulence_File - ModuleTurbGOTM - ERR10
nohup: ignoring input
Get meteo from: /ciram/saida/cptec/wrf7km///20230227_20230228//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230227
Message from XMART: model Babitonga
Program Mohid Water was not successfully terminated for 20230227
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        done.
        done.
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
Get meteo from: /ciram/saida/cptec/wrf7km///20230228_20230301//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230228
Get meteo from: /ciram/saida/cptec/wrf7km///20230301_20230302//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230301
Get meteo from: /ciram/saida/cptec/wrf7km///20230302_20230303//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230302
Get meteo from: /ciram/saida/cptec/wrf7km///20230303_20230304//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230303
Get meteo from: /ciram/saida/cptec/wrf7km///20230304_20230305//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230304
Get meteo from: /ciram/saida/cptec/wrf7km///20230305_20230306//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230305
Get meteo from: /ciram/saida/cptec/wrf7km///20230306_20230307//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230306
Get meteo from: /ciram/saida/cptec/wrf7km///20230307_20230308//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230307
Get meteo from: /ciram/saida/cptec/wrf7km///20230308_20230309//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230308
Get meteo from: /ciram/saida/cptec/wrf7km///20230309_20230310//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230309
Get meteo from: /ciram/saida/cptec/wrf7km///20230310_20230311//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230310
Get meteo from: /ciram/saida/cptec/wrf7km///20230311_20230312//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230311
Get meteo from: /ciram/saida/cptec/wrf7km///20230312_20230313//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230312
Get meteo from: /ciram/saida/cptec/wrf7km///20230313_20230314//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230313
Get meteo from: /ciram/saida/cptec/wrf7km///20230314_20230315//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230314
Get meteo from: /ciram/saida/cptec/wrf7km///20230315_20230316//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230315
Get meteo from: /ciram/saida/cptec/wrf7km///20230316_20230317//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230316
Get meteo from: /ciram/saida/cptec/wrf7km///20230317_20230318//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230317
Get meteo from: /ciram/saida/cptec/wrf7km///20230318_20230319//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230318
Get meteo from: /ciram/saida/cptec/wrf7km///20230319_20230320//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230319
Get meteo from: /ciram/saida/cptec/wrf7km///20230320_20230321//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230320
Get meteo from: /ciram/saida/cptec/wrf7km///20230321_20230322//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230321
Get meteo from: /ciram/saida/cptec/wrf7km///20230322_20230323//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230322
Get meteo from: /ciram/saida/cptec/wrf7km///20230323_20230324//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230323
Get meteo from: /ciram/saida/cptec/wrf7km///20230324_20230325//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230324
Get meteo from: /ciram/saida/cptec/wrf7km///20230325_20230326//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230325
Get meteo from: /ciram/saida/cptec/wrf7km///20230326_20230327//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230326
Get meteo from: /ciram/saida/cptec/wrf7km///20230327_20230328//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230327
Get meteo from: /ciram/saida/cptec/wrf7km///20230328_20230329//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230328
Get meteo from: /ciram/saida/cptec/wrf7km///20230329_20230330//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230329
Get meteo from: /ciram/saida/cptec/wrf7km///20230330_20230331//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230330
Get meteo from: /ciram/saida/cptec/wrf7km///20230331_20230401//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230331
Get meteo from: /ciram/saida/cptec/wrf7km///20230301_20230302//wrf.hdf5
Message from XMART: model Babitonga
Hydrodynamic BC file is missing for 20230301
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        done.
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        done.
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
Get meteo from: /ciram/saida/cptec/wrf7km///20230301_20230302//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230301
Get meteo from: /ciram/saida/cptec/wrf7km///20230302_20230303//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230302
Get meteo from: /ciram/saida/cptec/wrf7km///20230303_20230304//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230303
Get meteo from: /ciram/saida/cptec/wrf7km///20230304_20230305//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230304
Get meteo from: /ciram/saida/cptec/wrf7km///20230305_20230306//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230305
Get meteo from: /ciram/saida/cptec/wrf7km///20230306_20230307//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230306
Get meteo from: /ciram/saida/cptec/wrf7km///20230307_20230308//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230307
Get meteo from: /ciram/saida/cptec/wrf7km///20230308_20230309//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230308
Get meteo from: /ciram/saida/cptec/wrf7km///20230309_20230310//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230309
Get meteo from: /ciram/saida/cptec/wrf7km///20230310_20230311//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230310
Get meteo from: /ciram/saida/cptec/wrf7km///20230311_20230312//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230311
Get meteo from: /ciram/saida/cptec/wrf7km///20230312_20230313//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230312
Get meteo from: /ciram/saida/cptec/wrf7km///20230313_20230314//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230313
Get meteo from: /ciram/saida/cptec/wrf7km///20230314_20230315//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230314
Get meteo from: /ciram/saida/cptec/wrf7km///20230315_20230316//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230315
Get meteo from: /ciram/saida/cptec/wrf7km///20230316_20230317//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230316
Get meteo from: /ciram/saida/cptec/wrf7km///20230317_20230318//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230317
Get meteo from: /ciram/saida/cptec/wrf7km///20230318_20230319//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230318
Get meteo from: /ciram/saida/cptec/wrf7km///20230319_20230320//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230319
Get meteo from: /ciram/saida/cptec/wrf7km///20230320_20230321//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230320
Get meteo from: /ciram/saida/cptec/wrf7km///20230321_20230322//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230321
Get meteo from: /ciram/saida/cptec/wrf7km///20230322_20230323//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230322
Get meteo from: /ciram/saida/cptec/wrf7km///20230323_20230324//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230323
Get meteo from: /ciram/saida/cptec/wrf7km///20230324_20230325//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230324
Get meteo from: /ciram/saida/cptec/wrf7km///20230325_20230326//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230325
Get meteo from: /ciram/saida/cptec/wrf7km///20230326_20230327//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230326
Get meteo from: /ciram/saida/cptec/wrf7km///20230327_20230328//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230327
Get meteo from: /ciram/saida/cptec/wrf7km///20230328_20230329//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230328
Get meteo from: /ciram/saida/cptec/wrf7km///20230329_20230330//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230329
Get meteo from: /ciram/saida/cptec/wrf7km///20230330_20230331//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230330
Get meteo from: /ciram/saida/cptec/wrf7km///20230331_20230401//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230331
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        done.
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        done.
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        done.
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
Get meteo from: /ciram/saida/cptec/wrf7km///20230301_20230302//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230301
Get meteo from: /ciram/saida/cptec/wrf7km///20230302_20230303//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230302
Get meteo from: /ciram/saida/cptec/wrf7km///20230303_20230304//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230303
Get meteo from: /ciram/saida/cptec/wrf7km///20230304_20230305//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230304
Get meteo from: /ciram/saida/cptec/wrf7km///20230305_20230306//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230305
Get meteo from: /ciram/saida/cptec/wrf7km///20230306_20230307//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230306
Get meteo from: /ciram/saida/cptec/wrf7km///20230307_20230308//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230307
Get meteo from: /ciram/saida/cptec/wrf7km///20230308_20230309//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230308
Get meteo from: /ciram/saida/cptec/wrf7km///20230309_20230310//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230309
Get meteo from: /ciram/saida/cptec/wrf7km///20230310_20230311//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230310
Get meteo from: /ciram/saida/cptec/wrf7km///20230311_20230312//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230311
Get meteo from: /ciram/saida/cptec/wrf7km///20230312_20230313//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230312
Get meteo from: /ciram/saida/cptec/wrf7km///20230313_20230314//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230313
Get meteo from: /ciram/saida/cptec/wrf7km///20230314_20230315//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230314
Get meteo from: /ciram/saida/cptec/wrf7km///20230315_20230316//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230315
Get meteo from: /ciram/saida/cptec/wrf7km///20230316_20230317//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230316
Get meteo from: /ciram/saida/cptec/wrf7km///20230317_20230318//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230317
Message from XMART: model Babitonga
Program Mohid Water was not successfully terminated for 20230317
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        done.
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        done.
        done.
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        done.
        done.
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        done.
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        done.
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        done.
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        done.
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        done.
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
Get meteo from: /ciram/saida/cptec/wrf7km///20230301_20230302//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230301
Get meteo from: /ciram/saida/cptec/wrf7km///20230302_20230303//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230302
Get meteo from: /ciram/saida/cptec/wrf7km///20230303_20230304//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230303
Get meteo from: /ciram/saida/cptec/wrf7km///20230304_20230305//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230304
Get meteo from: /ciram/saida/cptec/wrf7km///20230305_20230306//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230305
Get meteo from: /ciram/saida/cptec/wrf7km///20230306_20230307//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230306
Get meteo from: /ciram/saida/cptec/wrf7km///20230307_20230308//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230307
Get meteo from: /ciram/saida/cptec/wrf7km///20230308_20230309//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230308
Get meteo from: /ciram/saida/cptec/wrf7km///20230309_20230310//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230309
Get meteo from: /ciram/saida/cptec/wrf7km///20230310_20230311//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230310
Get meteo from: /ciram/saida/cptec/wrf7km///20230311_20230312//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230311
Get meteo from: /ciram/saida/cptec/wrf7km///20230312_20230313//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230312
Get meteo from: /ciram/saida/cptec/wrf7km///20230313_20230314//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230313
Get meteo from: /ciram/saida/cptec/wrf7km///20230314_20230315//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230314
Get meteo from: /ciram/saida/cptec/wrf7km///20230315_20230316//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230315
Get meteo from: /ciram/saida/cptec/wrf7km///20230316_20230317//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230316
Get meteo from: /ciram/saida/cptec/wrf7km///20230317_20230318//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230317
Get meteo from: /ciram/saida/cptec/wrf7km///20230318_20230319//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230318
Get meteo from: /ciram/saida/cptec/wrf7km///20230319_20230320//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230319
Get meteo from: /ciram/saida/cptec/wrf7km///20230320_20230321//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230320
Get meteo from: /ciram/saida/cptec/wrf7km///20230321_20230322//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230321
Get meteo from: /ciram/saida/cptec/wrf7km///20230322_20230323//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230322
Get meteo from: /ciram/saida/cptec/wrf7km///20230323_20230324//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230323
Get meteo from: /ciram/saida/cptec/wrf7km///20230324_20230325//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230324
Get meteo from: /ciram/saida/cptec/wrf7km///20230325_20230326//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230325
Get meteo from: /ciram/saida/cptec/wrf7km///20230326_20230327//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230326
Get meteo from: /ciram/saida/cptec/wrf7km///20230327_20230328//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230327
Get meteo from: /ciram/saida/cptec/wrf7km///20230328_20230329//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230328
Get meteo from: /ciram/saida/cptec/wrf7km///20230329_20230330//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230329
Get meteo from: /ciram/saida/cptec/wrf7km///20230330_20230331//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230330
Get meteo from: /ciram/saida/cptec/wrf7km///20230331_20230401//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230331
Get meteo from: /ciram/saida/cptec/wrf7km///20230401_20230402//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230401
Get meteo from: /ciram/saida/cptec/wrf7km///20230402_20230403//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230402
Get meteo from: /ciram/saida/cptec/wrf7km///20230403_20230404//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230403
Get meteo from: /ciram/saida/cptec/wrf7km///20230404_20230405//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230404
Get meteo from: /ciram/saida/cptec/wrf7km///20230405_20230406//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230405
Get meteo from: /ciram/saida/cptec/wrf7km///20230406_20230407//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230406
Get meteo from: /ciram/saida/cptec/wrf7km///20230407_20230408//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230407
Get meteo from: /ciram/saida/cptec/wrf7km///20230408_20230409//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230408
Get meteo from: /ciram/saida/cptec/wrf7km///20230409_20230410//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230409
Get meteo from: /ciram/saida/cptec/wrf7km///20230410_20230411//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230410
Get meteo from: /ciram/saida/cptec/wrf7km///20230411_20230412//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230411
Get meteo from: /ciram/saida/cptec/wrf7km///20230412_20230413//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230412
Get meteo from: /ciram/saida/cptec/wrf7km///20230413_20230414//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230413
Get meteo from: /ciram/saida/cptec/wrf7km///20230414_20230415//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230414
Get meteo from: /ciram/saida/cptec/wrf7km///20230415_20230416//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230415
Get meteo from: /ciram/saida/cptec/wrf7km///20230416_20230417//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230416
Get meteo from: /ciram/saida/cptec/wrf7km///20230417_20230418//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230417
Get meteo from: /ciram/saida/cptec/wrf7km///20230418_20230419//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230418
Get meteo from: /ciram/saida/cptec/wrf7km///20230419_20230420//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230419
Get meteo from: /ciram/saida/cptec/wrf7km///20230420_20230421//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230420
Get meteo from: /ciram/saida/cptec/wrf7km///20230421_20230422//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230421
Get meteo from: /ciram/saida/cptec/wrf7km///20230422_20230423//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230422
Get meteo from: /ciram/saida/cptec/wrf7km///20230423_20230424//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230423
Get meteo from: /ciram/saida/cptec/wrf7km///20230424_20230425//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230424
Get meteo from: /ciram/saida/cptec/wrf7km///20230425_20230426//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230425
Get meteo from: /ciram/saida/cptec/wrf7km///20230426_20230427//wrf.hdf5
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230426
Get meteo from: /ciram/saida/cptec/wrf7km///20230427_20230428//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230427
Get meteo from: /ciram/saida/cptec/wrf7km///20230428_20230429//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230428
Get meteo from: /ciram/saida/cptec/wrf7km///20230429_20230430//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230429
Get meteo from: /ciram/saida/cptec/wrf7km///20230430_20230501//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230430
Get meteo from: /ciram/saida/cptec/wrf7km///20230501_20230502//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230501
Get meteo from: /ciram/saida/cptec/wrf7km///20230502_20230503//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230502
Get meteo from: /ciram/saida/cptec/wrf7km///20230503_20230504//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230503
Get meteo from: /ciram/saida/cptec/wrf7km///20230504_20230505//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230504
Get meteo from: /ciram/saida/cptec/wrf7km///20230505_20230506//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230505
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
    init_turbulence
        reading turbulence namelists..
        done.
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
    init_turbulence
        reading turbulence namelists..
        done.
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
    init_turbulence
        reading turbulence namelists..
        done.
Get meteo from: /ciram/saida/cptec/wrf7km///20230506_20230507//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230506
Get meteo from: /ciram/saida/cptec/wrf7km///20230507_20230508//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230507
Get meteo from: /ciram/saida/cptec/wrf7km///20230508_20230509//wrf.hdf5
Get forecast discharges from: /ciram/saida/geoglows/MohidInput//20230508
